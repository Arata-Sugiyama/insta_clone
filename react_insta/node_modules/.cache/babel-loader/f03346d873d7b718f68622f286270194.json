{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\nexport const fetchAsyncLogin = createAsyncThunk(\"auth/post\", async authen => {\n  const res = await axios.post(`${apiUrl}authen/jwt/create`, authen, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.data;\n});\nexport const fetchAsyncRegister = createAsyncThunk(\"auth/register\", async auth => {\n  const res = await axios.post(`${apiUrl}api/register/`, auth, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.data;\n});\nexport const fetchAsyncCreateProf = createAsyncThunk(\"profile/post\", async nickName => {\n  const res = await axios.post(`${apiUrl}api/profile/`, nickName, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `JWT ${localStorage.localJWT}`\n    }\n  });\n  return res.data;\n});\nexport const fetchAsyncUpdateProf = createAsyncThunk(\"profile/put\", async profile => {\n  const uploadData = new FormData();\n  uploadData.append(\"nickName\", profile.nickName);\n  profile.img && uploadData.append(\"img\", profile.img, profile.img.name);\n  const res = await axios.put(`${apiUrl}api/profile/${profile.id}/`, uploadData, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `JWT ${localStorage.localJWT}`\n    }\n  });\n  return res.data;\n});\nexport const fetchAsyncGetMyProf = createAsyncThunk(\"profile/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/myprofile/`, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`\n    }\n  });\n  return res.data[0];\n});\nexport const fetchAsyncGetProfs = createAsyncThunk(\"profiles/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/profile/`, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`\n    }\n  });\n  return res.data;\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    openSignIn: true,\n    openSignUp: false,\n    openProfile: false,\n    isLoadingAuth: false,\n    myprofile: {\n      id: 0,\n      nickName: \"\",\n      userProfile: 0,\n      created_on: \"\",\n      img: \"\"\n    },\n    profiles: [{\n      id: 0,\n      nickName: \"\",\n      userProfile: 0,\n      created_on: \"\",\n      img: \"\"\n    }]\n  },\n  reducers: {\n    fetchCredStart(state) {\n      state.isLoadingAuth = true;\n    },\n\n    fetchCredEnd(state) {\n      state.isLoadingAuth = false;\n    },\n\n    setOpenSignIn(state) {\n      state.openSignIn = true;\n    },\n\n    resetOpenSignIn(state) {\n      state.openSignIn = false;\n    },\n\n    setOpenSignUp(state) {\n      state.openSignUp = true;\n    },\n\n    resetOpenSignUp(state) {\n      state.openSignUp = false;\n    },\n\n    setOpenProfile(state) {\n      state.openProfile = true;\n    },\n\n    resetOpenProfile(state) {\n      state.openProfile = false;\n    },\n\n    editNickname(state, action) {\n      state.myprofile.nickName = action.payload;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAsyncLogin.fulfilled, (state, action) => {\n      localStorage.setItem(\"localJWT\", action.payload.access);\n    });\n    builder.addCase(fetchAsyncCreateProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n    });\n    builder.addCase(fetchAsyncGetMyProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n    });\n    builder.addCase(fetchAsyncGetProfs.fulfilled, (state, action) => {\n      state.profiles = action.payload;\n    });\n    builder.addCase(fetchAsyncUpdateProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n      state.profiles = state.profiles.map(prof => prof.id === action.payload.id ? action.payload : prof);\n    });\n  }\n});\nexport const {\n  fetchCredStart,\n  fetchCredEnd,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  setOpenProfile,\n  resetOpenProfile,\n  editNickname\n} = authSlice.actions;\nexport const selectIsLoadingAuth = state => state.auth.isLoadingAuth;\nexport const selectOpenSignIn = state => state.auth.openSignIn;\nexport const selectOpenSignUp = state => state.auth.openSignUp;\nexport const selectOpenProfile = state => state.auth.openProfile;\nexport const selectProfile = state => state.auth.myprofile;\nexport const selectProfiles = state => state.auth.profiles;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/sugiyamaarata/Documents/react_insta/src/features/auth/authSlice.ts"],"names":["createSlice","createAsyncThunk","axios","apiUrl","process","env","REACT_APP_DEV_API_URL","fetchAsyncLogin","authen","res","post","headers","data","fetchAsyncRegister","auth","fetchAsyncCreateProf","nickName","Authorization","localStorage","localJWT","fetchAsyncUpdateProf","profile","uploadData","FormData","append","img","name","put","id","fetchAsyncGetMyProf","get","fetchAsyncGetProfs","authSlice","initialState","openSignIn","openSignUp","openProfile","isLoadingAuth","myprofile","userProfile","created_on","profiles","reducers","fetchCredStart","state","fetchCredEnd","setOpenSignIn","resetOpenSignIn","setOpenSignUp","resetOpenSignUp","setOpenProfile","resetOpenProfile","editNickname","action","payload","extraReducers","builder","addCase","fulfilled","setItem","access","map","prof","actions","selectIsLoadingAuth","selectOpenSignIn","selectOpenSignUp","selectOpenProfile","selectProfile","selectProfiles","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport axios from \"axios\";\nimport { PROPS_AUTHEN, PROPS_PROFILE, PROPS_NICKNAME } from \"../types\";\n\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\n\nexport const fetchAsyncLogin = createAsyncThunk(\n  \"auth/post\",\n  async (authen: PROPS_AUTHEN) => {\n    const res = await axios.post(`${apiUrl}authen/jwt/create`, authen, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncRegister = createAsyncThunk(\n  \"auth/register\",\n  async (auth: PROPS_AUTHEN) => {\n    const res = await axios.post(`${apiUrl}api/register/`, auth, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncCreateProf = createAsyncThunk(\n  \"profile/post\",\n  async (nickName: PROPS_NICKNAME) => {\n    const res = await axios.post(`${apiUrl}api/profile/`, nickName, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncUpdateProf = createAsyncThunk(\n  \"profile/put\",\n  async (profile: PROPS_PROFILE) => {\n    const uploadData = new FormData();\n    uploadData.append(\"nickName\", profile.nickName);\n    profile.img && uploadData.append(\"img\", profile.img, profile.img.name);\n    const res = await axios.put(\n      `${apiUrl}api/profile/${profile.id}/`,\n      uploadData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.localJWT}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncGetMyProf = createAsyncThunk(\"profile/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/myprofile/`, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`,\n    },\n  });\n  return res.data[0];\n});\n\nexport const fetchAsyncGetProfs = createAsyncThunk(\"profiles/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/profile/`, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`,\n    },\n  });\n  return res.data;\n});\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    openSignIn: true,\n    openSignUp: false,\n    openProfile: false,\n    isLoadingAuth: false,\n    myprofile: {\n      id: 0,\n      nickName: \"\",\n      userProfile: 0,\n      created_on: \"\",\n      img: \"\",\n    },\n    profiles: [\n      {\n        id: 0,\n        nickName: \"\",\n        userProfile: 0,\n        created_on: \"\",\n        img: \"\",\n      },\n    ],\n  },\n  reducers: {\n    fetchCredStart(state) {\n      state.isLoadingAuth = true;\n    },\n    fetchCredEnd(state) {\n      state.isLoadingAuth = false;\n    },\n    setOpenSignIn(state) {\n      state.openSignIn = true;\n    },\n    resetOpenSignIn(state) {\n      state.openSignIn = false;\n    },\n    setOpenSignUp(state) {\n      state.openSignUp = true;\n    },\n    resetOpenSignUp(state) {\n      state.openSignUp = false;\n    },\n    setOpenProfile(state) {\n      state.openProfile = true;\n    },\n    resetOpenProfile(state) {\n      state.openProfile = false;\n    },\n    editNickname(state, action) {\n      state.myprofile.nickName = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncLogin.fulfilled, (state, action) => {\n      localStorage.setItem(\"localJWT\", action.payload.access);\n    });\n    builder.addCase(fetchAsyncCreateProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n    });\n    builder.addCase(fetchAsyncGetMyProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n    });\n    builder.addCase(fetchAsyncGetProfs.fulfilled, (state, action) => {\n      state.profiles = action.payload;\n    });\n    builder.addCase(fetchAsyncUpdateProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n      state.profiles = state.profiles.map((prof) =>\n        prof.id === action.payload.id ? action.payload : prof\n      );\n    });\n  },\n});\n\nexport const {\n  fetchCredStart,\n  fetchCredEnd,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  setOpenProfile,\n  resetOpenProfile,\n  editNickname,\n} = authSlice.actions;\n\nexport const selectIsLoadingAuth = (state: RootState) =>\n  state.auth.isLoadingAuth;\nexport const selectOpenSignIn = (state: RootState) => state.auth.openSignIn;\nexport const selectOpenSignUp = (state: RootState) => state.auth.openSignUp;\nexport const selectOpenProfile = (state: RootState) => state.auth.openProfile;\nexport const selectProfile = (state: RootState) => state.auth.myprofile;\nexport const selectProfiles = (state: RootState) => state.auth.profiles;\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}