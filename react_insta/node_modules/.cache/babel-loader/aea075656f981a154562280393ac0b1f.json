{"ast":null,"code":"var _jsxFileName = \"/Users/sugiyamaarata/Documents/react_insta/src/features/core/Core.tsx\";\nimport React, { useEffect } from \"react\";\nimport Auth from \"../auth/Auth\";\nimport styles from \"./Core.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, Avatar, Badge, CircularProgress } from \"@material-ui/core\";\nimport { MdAddAPhoto } from \"react-icons/md\";\nimport { editNickname, selectProfile, selectIsLoadingAuth, setOpenSignIn, resetOpenSignIn, setOpenSignUp, resetOpenSignUp, setOpenProfile, resetOpenProfile, fetchAsyncGetMyProf, fetchAsyncGetProfs } from \"../auth/authSlice\";\nimport { selectPosts, selectIsLoadingPost, setOpenNewPost, resetOpenNewPost, fetchAsyncGetPosts, fetchAsyncGetComments } from \"../post/postSlice\";\nimport Post from \"../post/Post\";\nimport EditProfile from \"./EditProfile\";\nimport NewPost from \"./NewPost\";\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"'\n    }\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0\n    }\n  }\n}))(Badge);\n\nconst Core = () => {\n  const dispatch = useDispatch();\n  const profile = useSelector(selectProfile);\n  const posts = useSelector(selectPosts);\n  const isLoadingPost = useSelector(selectIsLoadingPost);\n  const isLoadingAuth = useSelector(selectIsLoadingAuth);\n  useEffect(() => {\n    const fetchBootLoader = async () => {\n      if (localStorage.localJWT) {\n        dispatch(resetOpenSignIn());\n        const result = await dispatch(fetchAsyncGetMyProf());\n\n        if (fetchAsyncGetMyProf.rejected.match(result)) {\n          dispatch(setOpenSignIn());\n          return null;\n        }\n\n        await dispatch(fetchAsyncGetPosts());\n        await dispatch(fetchAsyncGetProfs());\n        await dispatch(fetchAsyncGetComments());\n      }\n    };\n\n    fetchBootLoader();\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(EditProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(NewPost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.core_header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.core_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }\n  }, \"SNS_clone\"), (profile === null || profile === void 0 ? void 0 : profile.nickName) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.core_btnModal,\n    onClick: () => {\n      dispatch(setOpenNewPost());\n      dispatch(resetOpenProfile());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(MdAddAPhoto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.core_logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }\n  }, (isLoadingPost || isLoadingAuth) && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      localStorage.removeItem(\"localJWT\");\n      dispatch(editNickname(\"\"));\n      dispatch(resetOpenProfile());\n      dispatch(resetOpenNewPost());\n      dispatch(setOpenSignIn());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 3\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.core_btnModal,\n    onClick: () => {\n      dispatch(setOpenProfile());\n      dispatch(resetOpenNewPost());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StyledBadge, {\n    overlap: \"circle\",\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    variant: \"dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: profile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      dispatch(setOpenSignIn());\n      dispatch(resetOpenSignUp());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, \"LogIn\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      dispatch(setOpenSignUp());\n      dispatch(resetOpenSignIn());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, \"SignUp\"))), (profile === null || profile === void 0 ? void 0 : profile.nickName) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.core_posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 1\n    }\n  }, posts.slice(0).reverse().map(post => /*#__PURE__*/React.createElement(Grid, {\n    key: post.id,\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Post, {\n    postId: post.id,\n    title: post.title,\n    loginId: profile.userProfile,\n    userPost: post.userPost,\n    imageUrl: post.img,\n    liked: post.liked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 3\n    }\n  })))))));\n};\n\nexport default Core;","map":{"version":3,"sources":["/Users/sugiyamaarata/Documents/react_insta/src/features/core/Core.tsx"],"names":["React","useEffect","Auth","styles","useSelector","useDispatch","withStyles","Button","Grid","Avatar","Badge","CircularProgress","MdAddAPhoto","editNickname","selectProfile","selectIsLoadingAuth","setOpenSignIn","resetOpenSignIn","setOpenSignUp","resetOpenSignUp","setOpenProfile","resetOpenProfile","fetchAsyncGetMyProf","fetchAsyncGetProfs","selectPosts","selectIsLoadingPost","setOpenNewPost","resetOpenNewPost","fetchAsyncGetPosts","fetchAsyncGetComments","Post","EditProfile","NewPost","StyledBadge","theme","badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Core","dispatch","profile","posts","isLoadingPost","isLoadingAuth","fetchBootLoader","localStorage","localJWT","result","rejected","match","core_header","core_title","nickName","core_btnModal","core_logout","removeItem","vertical","horizontal","img","core_posts","slice","reverse","map","post","id","title","userProfile","userPost","liked"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\nimport Auth from \"../auth/Auth\";\n\nimport styles from \"./Core.module.css\";\nimport {useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Grid,\n  Avatar,\n  Badge,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nimport {\n  editNickname,\n  selectProfile,\n  selectIsLoadingAuth,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  setOpenProfile,\n  resetOpenProfile,\n  fetchAsyncGetMyProf,\n  fetchAsyncGetProfs,\n} from \"../auth/authSlice\";\n\nimport {\n  selectPosts,\n  selectIsLoadingPost,\n  setOpenNewPost,\n  resetOpenNewPost,\n  fetchAsyncGetPosts,\n  fetchAsyncGetComments,\n} from \"../post/postSlice\";\n\nimport Post from \"../post/Post\";\nimport EditProfile from \"./EditProfile\";\nimport NewPost from \"./NewPost\";\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nconst Core: React.FC =() => {\n\nconst dispatch: AppDispatch = useDispatch();\nconst profile = useSelector(selectProfile);\nconst posts = useSelector(selectPosts);\nconst isLoadingPost = useSelector(selectIsLoadingPost);\nconst isLoadingAuth = useSelector(selectIsLoadingAuth);\n\nuseEffect(() =>{\n  const fetchBootLoader = async () =>{\n    if (localStorage.localJWT){\n      dispatch(resetOpenSignIn());\n      const result = await dispatch(fetchAsyncGetMyProf());\n      if (fetchAsyncGetMyProf.rejected.match(result)){\n        dispatch(setOpenSignIn());\n        return null;\n      }\n      await dispatch(fetchAsyncGetPosts());\n      await dispatch(fetchAsyncGetProfs());\n      await dispatch(fetchAsyncGetComments());\n    }\n    };\n    fetchBootLoader();\n  },[dispatch]\n);\n\n  return (\n    <div>\n  <Auth />\n  <EditProfile />\n  <NewPost />\n  <div className={styles.core_header}>\n  <h1 className={styles.core_title}>SNS_clone</h1>\n  {profile?.nickName ?(\n  <>\n  <button\n  className={styles.core_btnModal}\n  onClick={() => {\n    dispatch(setOpenNewPost());\n    dispatch(resetOpenProfile());\n  }}>\n  <MdAddAPhoto />\n  </button>\n  <div className={styles.core_logout}>\n  {( isLoadingPost || isLoadingAuth ) && <CircularProgress />}\n  <Button\n  onClick={() => {\n    localStorage.removeItem(\"localJWT\");\n    dispatch(editNickname(\"\"));\n    dispatch(resetOpenProfile());\n    dispatch(resetOpenNewPost());\n    dispatch(setOpenSignIn());\n  }}\n  >\n  Logout\n  </Button>\n  <button\n  className={styles.core_btnModal}\n  onClick={() => {\n    dispatch(setOpenProfile());\n    dispatch(resetOpenNewPost());\n  }}\n  >\n  <StyledBadge\n          overlap=\"circle\"\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          variant=\"dot\"\n        >\n          <Avatar alt=\"Remy Sharp\" src={profile.img} />\n        </StyledBadge>\n        </button>\n\n  </div>\n  </>\n):(\n    <div>\n    <Button\n    onClick={()=>{\n      dispatch(setOpenSignIn());\n      dispatch(resetOpenSignUp());\n    }}\n    >\n    LogIn\n    </Button>\n    <Button\n    onClick={()=>{\n      dispatch(setOpenSignUp());\n      dispatch(resetOpenSignIn());\n    }}\n    >\n    SignUp\n    </Button>\n    </div>\n  )}\n  </div>\n{profile?.nickName && (\n  <>\n<div className={styles.core_posts}>\n<Grid container spacing={4}>\n{posts\n.slice(0)\n.reverse()\n.map((post) => (\n  <Grid key={post.id} item xs={12} md={4}>\n  <Post\n  postId={post.id}\n  title={post.title}\n  loginId={profile.userProfile}\n  userPost={post.userPost}\n  imageUrl={post.img}\n  liked={post.liked}\n  />\n  </Grid>\n))}\n</Grid>\n</div>\n  </>\n)}\n  </div>\n);\n};\nexport default Core;\n"]},"metadata":{},"sourceType":"module"}