{"ast":null,"code":"var _jsxFileName = \"/Users/sugiyamaarata/Documents/react_insta/src/features/post/Post.tsx\";\nimport React, { useState } from \"react\";\nimport styles from \"./Post.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Divider, Checkbox } from \"@material-ui/core\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProfiles } from \"../auth/authSlice\";\nimport { selectComments, fetchPostStart, fetchPostEnd, fetchAsyncPostComment, fetchAsyncPatchLiked } from \"./postSlice\";\nconst useStyles = makeStyles(theme => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Post = ({\n  postId,\n  loginId,\n  userPost,\n  title,\n  imageUrl,\n  liked\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const profiles = useSelector(selectProfiles);\n  const comments = useSelector(selectComments);\n  const [text, setText] = useState(\"\");\n  const commentsOnPost = comments.filter(com => {\n    return com.post === postId;\n  });\n  const prof = profiles.filter(prof => {\n    return prof.userProfile === userPost;\n  });\n\n  const postComment = async e => {\n    e.preventDefault();\n    const packet = {\n      text: text,\n      post: postId\n    };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPostComment(packet));\n    await dispatch(fetchPostEnd());\n    setText(\"\");\n  };\n\n  const handlerLiked = async () => {\n    const packet = {\n      id: postId,\n      title: title,\n      current: liked,\n      new: loginId\n    };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPatchLiked(packet));\n    await dispatch(fetchPostEnd());\n  };\n\n  if (title) {\n    var _prof$, _prof$2, _prof$3;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post_header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: styles.post_avatar,\n      src: (_prof$ = prof[0]) === null || _prof$ === void 0 ? void 0 : _prof$.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }\n    }, (_prof$2 = prof[0]) === null || _prof$2 === void 0 ? void 0 : _prof$2.nickName)), /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.post_image,\n      src: imageUrl,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: styles.post_text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      className: styles.post_checkBox,\n      icon: /*#__PURE__*/React.createElement(FavoriteBorder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(Favorite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }\n      }),\n      checked: liked.some(like => like === loginId),\n      onChange: handlerLiked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }\n    }, (_prof$3 = prof[0]) === null || _prof$3 === void 0 ? void 0 : _prof$3.nickName), title, /*#__PURE__*/React.createElement(AvatarGroup, {\n      max: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }\n    }, liked.map(like => {\n      var _profiles$find;\n\n      return /*#__PURE__*/React.createElement(Avatar, {\n        className: styles.post_avatarGroup,\n        key: like,\n        src: (_profiles$find = profiles.find(prof => prof.userProfile === like)) === null || _profiles$find === void 0 ? void 0 : _profiles$find.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 1\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post_comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 1\n      }\n    }, commentOnPost.map(comment => {\n      var _profiles$find2, _profiles$find3;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: comment.id,\n        className: styles.post_comment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        src: (_profiles$find2 = profiles.find(prof => prof.userProfile === comment.userComment)) === null || _profiles$find2 === void 0 ? void 0 : _profiles$find2.img,\n        className: classes.small,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 3\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        className: styles.post_strong,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 3\n        }\n      }, (_profiles$find3 = profiles.find(prof => prof.userProfile === comment.userComment)) === null || _profiles$find3 === void 0 ? void 0 : _profiles$find3.nickName), comment.text));\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      className: styles.post_commentBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: styles.post_input,\n      type: \"text\",\n      placeholder: \"add a comment\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !text.length,\n      className: styles.post_button,\n      type: \"submit\",\n      onClick: postComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 1\n      }\n    }, \"Post\")));\n  }\n\n  return null;\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/sugiyamaarata/Documents/react_insta/src/features/post/Post.tsx"],"names":["React","useState","styles","makeStyles","Avatar","Divider","Checkbox","Favorite","FavoriteBorder","AvatarGroup","useSelector","useDispatch","selectProfiles","selectComments","fetchPostStart","fetchPostEnd","fetchAsyncPostComment","fetchAsyncPatchLiked","useStyles","theme","small","width","spacing","height","marginRight","Post","postId","loginId","userPost","title","imageUrl","liked","classes","dispatch","profiles","comments","text","setText","commentsOnPost","filter","com","post","prof","userProfile","postComment","e","preventDefault","packet","handlerLiked","id","current","new","post_header","post_avatar","img","nickName","post_image","post_text","post_checkBox","some","like","map","post_avatarGroup","find","post_comments","commentOnPost","comment","post_comment","userComment","post_strong","post_commentBox","post_input","target","value","length","post_button"],"mappings":"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","sourcesContent":["import React , { useState }from \"react\";\nimport styles from \"./Post.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Divider, Checkbox } from \"@material-ui/core\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\n\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\n\nimport { selectProfiles } from \"../auth/authSlice\";\n\nimport {\n  selectComments,\n  fetchPostStart,\n  fetchPostEnd,\n  fetchAsyncPostComment,\n  fetchAsyncPatchLiked,\n} from \"./postSlice\";\n\nimport { PROPS_POST } from \"../types\";\n\nconst useStyles = makeStyles((theme) => ({\n  small:{\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Post : React.FC<PROPS_POST> = ({\n  postId,\n  loginId,\n  userPost,\n  title,\n  imageUrl,\n  liked,\n}) =>{\nconst classes = useStyles();\nconst dispatch: AppDispatch = useDispatch();\nconst profiles = useSelector(selectProfiles);\nconst comments = useSelector(selectComments);\nconst [text, setText] = useState(\"\");\nconst commentsOnPost = comments.filter((com) =>{\n  return com.post === postId;\n});\n\nconst prof = profiles.filter((prof) => {\n  return prof.userProfile === userPost;\n});\n\nconst postComment = async (e: React.MouseEvent<HTMLElement>)=>{\n  e.preventDefault();\n  const packet = { text: text, post:postId };\n  await dispatch(fetchPostStart());\n  await dispatch(fetchAsyncPostComment(packet));\n  await dispatch(fetchPostEnd());\n  setText(\"\");\n};\n\nconst handlerLiked = async () =>{\n  const packet = {\n    id: postId,\n    title: title,\n    current: liked,\n    new: loginId,\n  };\n  await dispatch(fetchPostStart());\n  await dispatch(fetchAsyncPatchLiked(packet));\n  await dispatch(fetchPostEnd());\n};\n\nif(title){\nreturn(<div className={styles.post}>\n<div className={styles.post_header}>\n<Avatar className={styles.post_avatar} src={prof[0]?.img} />\n<h3>{prof[0]?.nickName}</h3>\n</div>\n<img className={styles.post_image} src={imageUrl} alt=\"\" />\n<h4 className={styles.post_text}>\n<Checkbox\nclassName={styles.post_checkBox}\nicon={<FavoriteBorder />}\ncheckedIcon={<Favorite />}\nchecked={liked.some((like) => like === loginId)}\nonChange={handlerLiked}\n/>\n<strong>{prof[0]?.nickName}</strong>{title}\n<AvatarGroup max={7}>\n{liked.map((like)=> (\n<Avatar\nclassName={styles.post_avatarGroup}\nkey={like}\nsrc={profiles.find((prof) => prof.userProfile === like)?.img}\n/>\n))}\n</AvatarGroup>\n</h4>\n<Divider />\n<div className={styles.post_comments}>\n{commentOnPost.map((comment) => (\n  <div key={comment.id} className={styles.post_comment}>\n  <Avatar\n  src={\n    profiles.find(\n      (prof) => prof.userProfile === comment.userComment\n    )?.img\n  }\n  className={classes.small}\n  />\n  <p>\n  <strong className={styles.post_strong}>\n  {\n    profiles.find(\n      (prof) => prof.userProfile === comment.userComment\n    )?.nickName\n  }\n  </strong>\n  {comment.text}\n  </p>\n  </div>\n))}\n</div>\n\n<form className={styles.post_commentBox}>\n<input\nclassName={styles.post_input}\ntype=\"text\"\nplaceholder=\"add a comment\"\nvalue={text}\nonChange={(e) => setText(e.target.value)}\n/>\n<button\ndisabled={!text.length}\nclassName={styles.post_button}\ntype=\"submit\"\nonClick={postComment}>\nPost\n</button>\n</form>\n</div>\n);\n\n}\nreturn null;\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}