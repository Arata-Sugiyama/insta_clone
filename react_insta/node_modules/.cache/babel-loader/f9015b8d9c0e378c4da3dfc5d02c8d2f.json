{"ast":null,"code":"var _jsxFileName = \"/Users/sugiyamaarata/Documents/react_insta/src/features/auth/Auth.tsx\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./Auth.module.css\";\nimport Modal from \"react-modal\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport { selectIsLoadingAuth, selectOpenSignIn, selectOpenSignUp, setOpenSignIn, resetOpenSignIn, resetOpenSignUp, fetchCredStart, fetchCredEnd, fetchAsyncLogin, fetchAsyncRegister, fetchAsyncGetMyProf, fetchAsyncGetProfs, fetchAsyncCreateProf } from \"./authSlice\";\nconst customStyle = {\n  overlay: {\n    backgroundColor: \"#777777\"\n  },\n  content: {\n    top: \"55%\",\n    left: \"50%\",\n    width: 280,\n    height: 350,\n    padding: \"50px\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nconst Auth = () => {\n  Modal.setAppElement(\"#root\");\n  const openSignIn = useSelector(selectOpenSignIn);\n  const openSignUp = useSelector(selectOpenSignUp);\n  const isLoadingAuth = useSelector(selectIsLoadingAuth);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: openSignUp,\n    onRequestClose: async () => {\n      await dispatch(resetOpenSignUp());\n    },\n    style: customStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialErrors: {\n      email: \"required\"\n    },\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: async values => {\n      await dispatch(fetchCredStart());\n      const resultReg = await dispatch(fetchAsyncRegister(values));\n\n      if (fetchAsyncRegister.fulfilled.match(resultReg)) {\n        await dispatch(fetchAsyncLogin(values));\n        await dispatch(fetchAsyncCreateProf({\n          nickName: \"annonymous\"\n        }));\n        await dispatch(fetchAsyncGetProfs()); //await dispath(fetchAsyncGetPosts());\n        //await dispatch(fetchAsyncGetComments());\n\n        await dispatch(fetchAsyncGetMyProf());\n      }\n\n      await dispatch(fetchCredEnd());\n      await dispatch(resetOpenSignUp());\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"email format is wrong\").required(\"email is must\"),\n      password: Yup.string().required(\"password is must\").min(4)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, ({\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    touched,\n    isValid\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.auth_signUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.auth_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \"SNS_clone\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.auth_progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, isLoadingAuth && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"email\",\n    type: \"input\",\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }), touched.email && errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.auth_error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, erros.email) : null, /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"password\",\n    type: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }), touched.password && errors.pssword ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.auth_error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, erros.password) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !isValid,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.auth_text,\n    onClick: async () => {\n      await dispatch(setOpenSignIn());\n      await dispatch(resetOpenSignUp());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, \"You already have a account?\")))), \"}\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: openSignIn,\n    onRequestClose: async () => {\n      await dispatch(resetOpenSignIn());\n    },\n    style: customStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialErrors: {\n      email: \"required\"\n    },\n    initialValues: {\n      email: \"\",\n      passeord: \"\"\n    },\n    onSubmit: async values => {\n      await dispatch(fetchCredStart());\n      const result = await dispatch(fetchAsyncLogin(values));\n\n      if (fetchAsyncLogin.fulfilled.match(result)) {\n        await dispatch(fetchAsyncGetProfs()); //await dispatch(fetchAsyncGetPosts());\n        //await dispatch(fetchAsyncGetComments());\n\n        await dispatch(fetchAsyncGetMyProf());\n      }\n\n      await dispatch(fetchCredEnd());\n      await dispatch(resetOpenSignIn());\n    },\n    validationSchema: Yup.objects().shape({\n      email: Yup.string().email(\"email format is wrong\").required(\"email is must\"),\n      passeord: Yup.string().required(\"passeord is must\").min(4)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, ({\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    errors,\n    touched,\n    isValid\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.auth_signUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.auth_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"SNS_clone\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.auth_progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, isLoadingAuth && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"email\",\n    type: \"input\",\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), touched.email && errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.auth_error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, erros.email) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"password\",\n    type: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }), touched.password && errors.pssword ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.auth_error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, erros.password) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !isValid,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.auth_text,\n    onClick: async () => {\n      await dispatch(setOpenSignIn());\n      await dispatch(resetOpenSignUp());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, \"You already have a account?\")))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/sugiyamaarata/Documents/react_insta/src/features/auth/Auth.tsx"],"names":["React","useSelector","useDispatch","styles","Modal","Formik","Yup","TextField","Button","CircularProgress","selectIsLoadingAuth","selectOpenSignIn","selectOpenSignUp","setOpenSignIn","resetOpenSignIn","resetOpenSignUp","fetchCredStart","fetchCredEnd","fetchAsyncLogin","fetchAsyncRegister","fetchAsyncGetMyProf","fetchAsyncGetProfs","fetchAsyncCreateProf","customStyle","overlay","backgroundColor","content","top","left","width","height","padding","transform","Auth","setAppElement","openSignIn","openSignUp","isLoadingAuth","dispatch","email","password","values","resultReg","fulfilled","match","nickName","object","shape","string","required","min","handleSubmit","handleChange","handleBlur","touched","isValid","auth_signUp","auth_title","auth_progress","errors","auth_error","erros","pssword","auth_text","customStyles","passeord","result","objects"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AppDispatch } from \"../../app/store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./Auth.module.css\";\nimport Modal from \"react-modal\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport {\n  selectIsLoadingAuth,\n  selectOpenSignIn,\n  selectOpenSignUp,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  fetchCredStart,\n  fetchCredEnd,\n  fetchAsyncLogin,\n  fetchAsyncRegister,\n  fetchAsyncGetMyProf,\n  fetchAsyncGetProfs,\n  fetchAsyncCreateProf,\n} from \"./authSlice\";\n\nconst customStyle = {\n  overlay:{\n    backgroundColor:\"#777777\",\n  },\n  content:{\n    top:\"55%\",\n    left:\"50%\",\n\n    width: 280,\n    height: 350,\n    padding: \"50px\",\n\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst Auth: React.FC = () =>{\n  Modal.setAppElement(\"#root\");\n  const openSignIn = useSelector(selectOpenSignIn);\n  const openSignUp = useSelector(selectOpenSignUp);\n  const isLoadingAuth = useSelector(selectIsLoadingAuth);\n  const dispatch: AppDispatch = useDispatch();\n\n  return (\n    <>\n    <Modal\n    isOpen={openSignUp}\n    onRequestClose={async () => {\n      await dispatch(resetOpenSignUp());\n    }}\n    style={customStyle}\n    >\n    <Formik\n    initialErrors={{ email: \"required\" }}\n    initialValues={{ email: \"\", password: \"\" }}\n    onSubmit={async (values) =>{\n      await dispatch(fetchCredStart());\n      const resultReg = await dispatch(fetchAsyncRegister(values));\n\n      if (fetchAsyncRegister.fulfilled.match(resultReg)){\n        await dispatch(fetchAsyncLogin(values));\n        await dispatch(fetchAsyncCreateProf({nickName:\"annonymous\"}));\n\n        await dispatch(fetchAsyncGetProfs());\n        //await dispath(fetchAsyncGetPosts());\n        //await dispatch(fetchAsyncGetComments());\n        await dispatch(fetchAsyncGetMyProf());\n      }\n      await dispatch(fetchCredEnd());\n      await dispatch(resetOpenSignUp());\n    }}\n    validationSchema={Yup.object().shape({\n      email: Yup.string()\n      .email(\"email format is wrong\")\n      .required(\"email is must\"),\n      password: Yup.string().required(\"password is must\").min(4),\n    })}\n    >\n    {({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n    }) => <div>\n    <form onSubmit={handleSubmit}>\n    <div className={styles.auth_signUp}>\n    <h1 className={styles.auth_title}>SNS_clone</h1>\n    <br />\n    <div className={styles.auth_progress}>\n    {isLoadingAuth && <CircularProgress />}\n    </div>\n    <br />\n    <TextField\n    placeholder=\"email\"\n    type=\"input\"\n    name=\"email\"\n    onChange={handleChange}\n    onBlur={handleBlur}\n    value={values.email}\n    />\n    <br />\n    {touched.email && errors.email ? (\n      <div className={styles.auth_error}>{erros.email}</div>\n    ) : null}\n\n    <TextField\n    placeholder=\"password\"\n    type=\"password\"\n    name=\"password\"\n    onChange={handleChange}\n    onBlur={handleBlur}\n    value={values.password}\n    />\n    <br />\n    {touched.password && errors.pssword ? (\n      <div className={styles.auth_error}>{erros.password}</div>\n    ) : null}\n    <br />\n    <br />\n\n    <Button\n    variant=\"contained\"\n    color=\"primary\"\n    disabled={!isValid}\n    type=\"submit\">\n    Register\n    </Button>\n    <br />\n    <br />\n    <span\n    className={styles.auth_text}\n    onClick={async () => {\n      await dispatch(setOpenSignIn());\n      await dispatch(resetOpenSignUp());\n    }}\n    >\n    You already have a account?\n    </span>\n    </div>\n    </form>\n    </div>\n  }}\n    </Formik>\n    </Modal>\n    <Modal\n    isOpen={openSignIn}\n    onRequestClose={async () => {\n      await dispatch(resetOpenSignIn());\n    }}\n    style={customStyles}\n    >\n    <Formik\n    initialErrors={{ email: \"required\"}}\n    initialValues={{ email: \"\",passeord:\"\"}}\n    onSubmit={async (values)=>{\n      await dispatch(fetchCredStart());\n      const result = await dispatch(fetchAsyncLogin(values));\n      if (fetchAsyncLogin.fulfilled.match(result)){\n        await dispatch(fetchAsyncGetProfs());\n        //await dispatch(fetchAsyncGetPosts());\n        //await dispatch(fetchAsyncGetComments());\n        await dispatch(fetchAsyncGetMyProf());\n      }\n      await dispatch(fetchCredEnd());\n      await dispatch(resetOpenSignIn());\n    }}\n    validationSchema={Yup.objects().shape({\n      email: Yup.string()\n      .email(\"email format is wrong\")\n      .required(\"email is must\"),\n      passeord: Yup.string().required(\"passeord is must\").min(4),\n    })}\n    >\n    {({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      errors,\n      touched,\n      isValid,\n    }) => (\n      <div>\n      <form onSubmit={handleChange}>\n      <div className={styles.auth_signUp}>\n      <h1 className={styles.auth_title}>SNS_clone</h1>\n      <br />\n      <div className={styles.auth_progress}>\n      {isLoadingAuth && <CircularProgress />}\n      </div>\n      <br />\n      <TextField\n      placeholder=\"email\"\n      type=\"input\"\n      name=\"email\"\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={values.email}\n      />\n      {touched.email && errors.email ? (\n        <div className={styles.auth_error}>{erros.email}</div>\n      ) : null}\n      <br />\n\n      <TextField\n      placeholder=\"password\"\n      type=\"password\"\n      name=\"password\"\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={values.password}\n      />\n\n      {touched.password && errors.pssword ? (\n        <div className={styles.auth_error}>{erros.password}</div>\n      ) : null}\n      <br />\n      <br />\n      <Button\n      variant=\"contained\"\n      color=\"primary\"\n      disabled={!isValid}\n      type=\"submit\">\n      Login\n      </Button>\n      <br />\n      <br />\n      <span\n      className={styles.auth_text}\n      onClick={async () => {\n        await dispatch(setOpenSignIn());\n        await dispatch(resetOpenSignUp());\n      }}\n      >\n      You already have a account?\n      </span>\n      </div>\n      </form>\n      </div >\n\n    )}\n    </Formik>\n\n    </Modal>\n    </>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}