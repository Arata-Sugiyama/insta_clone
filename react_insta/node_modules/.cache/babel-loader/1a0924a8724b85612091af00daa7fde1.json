{"ast":null,"code":"var _jsxFileName = \"/Users/sugiyamaarata/Documents/react_insta/src/features/core/Core.tsx\";\nimport React, { useEffect } from \"react\";\nimport Auth from \"../auth/Auth\";\nimport styles from \"./Core.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Badge } from \"@material-ui/core\";\nimport { MdAddAPhoto } from \"react-icons/md\";\nimport { selectProfile, selectIsLoadingAuth, setOpenSignIn, resetOpenSignIn, resetOpenProfile, fetchAsyncGetMyProf, fetchAsyncGetProfs } from \"../auth/authSlice\";\nimport { selectPosts, selectIsLoadingPost, setOpenNewPost, fetchAsyncGetPosts, fetchAsyncGetComments } from \"../post/postSlice\";\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"'\n    }\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0\n    }\n  }\n}))(Badge);\n\nconst Core = () => {\n  const dispatch = useDispatch();\n  const profile = useSelector(selectProfile);\n  const posts = useSelector(selectPosts);\n  const isLoadingPost = useSelector(selectIsLoadingPost);\n  const isLoadingAuth = useSelector(selectIsLoadingAuth);\n  useEffect(() => {\n    const fetchBootLoader = async () => {\n      if (localStorage.localJWT) {\n        dispatch(resetOpenSignIn());\n        const result = await dispatch(fetchAsyncGetMyProf());\n\n        if (fetchAsyncGetMyProf.rejected.match(result)) {\n          dispatch(setOpenSignIn());\n          return null;\n        }\n\n        await dispatch(fetchAsyncGetPosts);\n        await dispatch(fetchAsyncGetProfs);\n        await dispatch(fetchAsyncGetComments);\n      }\n    };\n\n    fetchBootLoader();\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.core_header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.core_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }\n  }, \"SNS_clone\"), (profile === null || profile === void 0 ? void 0 : profile.nickName) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.core_btnModal,\n    onClick: () => {\n      dispatch(setOpenNewPost());\n      dispatch(resetOpenProfile());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(MdAddAPhoto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Core;","map":{"version":3,"sources":["/Users/sugiyamaarata/Documents/react_insta/src/features/core/Core.tsx"],"names":["React","useEffect","Auth","styles","useSelector","useDispatch","withStyles","Badge","MdAddAPhoto","selectProfile","selectIsLoadingAuth","setOpenSignIn","resetOpenSignIn","resetOpenProfile","fetchAsyncGetMyProf","fetchAsyncGetProfs","selectPosts","selectIsLoadingPost","setOpenNewPost","fetchAsyncGetPosts","fetchAsyncGetComments","StyledBadge","theme","badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Core","dispatch","profile","posts","isLoadingPost","isLoadingAuth","fetchBootLoader","localStorage","localJWT","result","rejected","match","core_header","core_title","nickName","core_btnModal"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\nimport Auth from \"../auth/Auth\";\n\nimport styles from \"./Core.module.css\";\nimport {useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Grid,\n  Avatar,\n  Badge,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nimport {\n  editNickname,\n  selectProfile,\n  selectIsLoadingAuth,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  setOpenProfile,\n  resetOpenProfile,\n  fetchAsyncGetMyProf,\n  fetchAsyncGetProfs,\n} from \"../auth/authSlice\";\n\nimport {\n  selectPosts,\n  selectIsLoadingPost,\n  setOpenNewPost,\n  resetOpenNewPost,\n  fetchAsyncGetPosts,\n  fetchAsyncGetComments,\n} from \"../post/postSlice\";\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nconst Core: React.FC =() => {\n\nconst dispatch: AppDispatch = useDispatch();\nconst profile = useSelector(selectProfile);\nconst posts = useSelector(selectPosts);\nconst isLoadingPost = useSelector(selectIsLoadingPost);\nconst isLoadingAuth = useSelector(selectIsLoadingAuth);\n\nuseEffect(() =>{\n  const fetchBootLoader = async () =>{\n    if (localStorage.localJWT){\n      dispatch(resetOpenSignIn());\n      const result = await dispatch(fetchAsyncGetMyProf());\n      if (fetchAsyncGetMyProf.rejected.match(result)){\n        dispatch(setOpenSignIn());\n        return null;\n      }\n      await dispatch(fetchAsyncGetPosts);\n      await dispatch(fetchAsyncGetProfs);\n      await dispatch(fetchAsyncGetComments);\n    }\n    };\n    fetchBootLoader();\n  },[dispatch]\n);\n\n  return <div>\n  <Auth />\n  <div className={styles.core_header}>\n  <h1 className={styles.core_title}>SNS_clone</h1>\n  {profile?.nickName ?\n  <>\n  <button\n  className={styles.core_btnModal}\n  onClick={() => {\n    dispatch(setOpenNewPost());\n    dispatch(resetOpenProfile());\n  }}>\n  <MdAddAPhoto />\n  </button>\n  </>:\n    <div></div>\n  }\n  </div>\n  </div>;\n}\n\nexport default Core;\n"]},"metadata":{},"sourceType":"module"}