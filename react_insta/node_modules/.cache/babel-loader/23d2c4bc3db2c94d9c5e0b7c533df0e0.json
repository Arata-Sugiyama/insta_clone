{"ast":null,"code":"var _jsxFileName = \"/Users/sugiyamaarata/Documents/insta_app/react_insta/src/features/post/Post.tsx\";\nimport React, { useState } from \"react\";\nimport styles from \"./Post.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Divider, Checkbox } from \"@material-ui/core\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProfiles } from \"../auth/authSlice\";\nimport { selectComments, fetchPostStart, fetchPostEnd, fetchAsyncPostComment, fetchAsyncPatchLiked } from \"./postSlice\";\nconst useStyles = makeStyles(theme => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Post = ({\n  postId,\n  loginId,\n  userPost,\n  title,\n  imageUrl,\n  liked\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const profiles = useSelector(selectProfiles);\n  const comments = useSelector(selectComments);\n  const [text, setText] = useState(\"\");\n  const commentsOnPost = comments.filter(com => {\n    return com.post === postId;\n  });\n  const prof = profiles.filter(prof => {\n    return prof.userProfile === userPost;\n  });\n\n  const postComment = async e => {\n    e.preventDefault();\n    const packet = {\n      text: text,\n      post: postId\n    };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPostComment(packet));\n    await dispatch(fetchPostEnd());\n    setText(\"\");\n  };\n\n  const handlerLiked = async () => {\n    const packet = {\n      id: postId,\n      title: title,\n      current: liked,\n      new: loginId\n    };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPatchLiked(packet));\n    await dispatch(fetchPostEnd());\n  };\n\n  if (title) {\n    var _prof$, _prof$2, _prof$3;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post_header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: styles.post_avatar,\n      src: (_prof$ = prof[0]) === null || _prof$ === void 0 ? void 0 : _prof$.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, (_prof$2 = prof[0]) === null || _prof$2 === void 0 ? void 0 : _prof$2.nickName)), /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.post_image,\n      src: imageUrl,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: styles.post_text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      className: styles.post_checkBox,\n      icon: /*#__PURE__*/React.createElement(FavoriteBorder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(Favorite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 26\n        }\n      }),\n      checked: liked.some(like => like === loginId),\n      onChange: handlerLiked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \" \", (_prof$3 = prof[0]) === null || _prof$3 === void 0 ? void 0 : _prof$3.nickName), \" \", title, /*#__PURE__*/React.createElement(AvatarGroup, {\n      max: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, liked.map(like => {\n      var _profiles$find;\n\n      return /*#__PURE__*/React.createElement(Avatar, {\n        className: styles.post_avatarGroup,\n        key: like,\n        src: (_profiles$find = profiles.find(prof => prof.userProfile === like)) === null || _profiles$find === void 0 ? void 0 : _profiles$find.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post_comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, commentsOnPost.map(comment => {\n      var _profiles$find2, _profiles$find3;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: comment.id,\n        className: styles.post_comment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        src: (_profiles$find2 = profiles.find(prof => prof.userProfile === comment.userComment)) === null || _profiles$find2 === void 0 ? void 0 : _profiles$find2.img,\n        className: classes.small,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        className: styles.post_strong,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, (_profiles$find3 = profiles.find(prof => prof.userProfile === comment.userComment)) === null || _profiles$find3 === void 0 ? void 0 : _profiles$find3.nickName), comment.text));\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      className: styles.post_commentBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: styles.post_input,\n      type: \"text\",\n      placeholder: \"add a comment\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !text.length,\n      className: styles.post_button,\n      type: \"submit\",\n      onClick: postComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Post\")));\n  }\n\n  return null;\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/sugiyamaarata/Documents/insta_app/react_insta/src/features/post/Post.tsx"],"names":["React","useState","styles","makeStyles","Avatar","Divider","Checkbox","Favorite","FavoriteBorder","AvatarGroup","useSelector","useDispatch","selectProfiles","selectComments","fetchPostStart","fetchPostEnd","fetchAsyncPostComment","fetchAsyncPatchLiked","useStyles","theme","small","width","spacing","height","marginRight","Post","postId","loginId","userPost","title","imageUrl","liked","classes","dispatch","profiles","comments","text","setText","commentsOnPost","filter","com","post","prof","userProfile","postComment","e","preventDefault","packet","handlerLiked","id","current","new","post_header","post_avatar","img","nickName","post_image","post_text","post_checkBox","some","like","map","post_avatarGroup","find","post_comments","comment","post_comment","userComment","post_strong","post_commentBox","post_input","target","value","length","post_button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Post.module.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Divider, Checkbox } from \"@material-ui/core\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\n\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\n\nimport { selectProfiles } from \"../auth/authSlice\";\n\nimport {\n  selectComments,\n  fetchPostStart,\n  fetchPostEnd,\n  fetchAsyncPostComment,\n  fetchAsyncPatchLiked,\n} from \"./postSlice\";\n\nimport { PROPS_POST } from \"../types\";\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Post: React.FC<PROPS_POST> = ({\n  postId,\n  loginId,\n  userPost,\n  title,\n  imageUrl,\n  liked,\n}) => {\n  const classes = useStyles();\n  const dispatch: AppDispatch = useDispatch();\n  const profiles = useSelector(selectProfiles);\n  const comments = useSelector(selectComments);\n  const [text, setText] = useState(\"\");\n\n  const commentsOnPost = comments.filter((com) => {\n    return com.post === postId;\n  });\n\n  const prof = profiles.filter((prof) => {\n    return prof.userProfile === userPost;\n  });\n\n  const postComment = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const packet = { text: text, post: postId };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPostComment(packet));\n    await dispatch(fetchPostEnd());\n    setText(\"\");\n  };\n\n  const handlerLiked = async () => {\n    const packet = {\n      id: postId,\n      title: title,\n      current: liked,\n      new: loginId,\n    };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPatchLiked(packet));\n    await dispatch(fetchPostEnd());\n  };\n\n  if (title) {\n    return (\n      <div className={styles.post}>\n        <div className={styles.post_header}>\n          <Avatar className={styles.post_avatar} src={prof[0]?.img} />\n          <h3>{prof[0]?.nickName}</h3>\n        </div>\n        <img className={styles.post_image} src={imageUrl} alt=\"\" />\n\n        <h4 className={styles.post_text}>\n          <Checkbox\n            className={styles.post_checkBox}\n            icon={<FavoriteBorder />}\n            checkedIcon={<Favorite />}\n            checked={liked.some((like) => like === loginId)}\n            onChange={handlerLiked}\n          />\n          <strong> {prof[0]?.nickName}</strong> {title}\n          <AvatarGroup max={7}>\n            {liked.map((like) => (\n              <Avatar\n                className={styles.post_avatarGroup}\n                key={like}\n                src={profiles.find((prof) => prof.userProfile === like)?.img}\n              />\n            ))}\n          </AvatarGroup>\n        </h4>\n\n        <Divider />\n        <div className={styles.post_comments}>\n          {commentsOnPost.map((comment) => (\n            <div key={comment.id} className={styles.post_comment}>\n              <Avatar\n                src={\n                  profiles.find(\n                    (prof) => prof.userProfile === comment.userComment\n                  )?.img\n                }\n                className={classes.small}\n              />\n              <p>\n                <strong className={styles.post_strong}>\n                  {\n                    profiles.find(\n                      (prof) => prof.userProfile === comment.userComment\n                    )?.nickName\n                  }\n                </strong>\n                {comment.text}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        <form className={styles.post_commentBox}>\n          <input\n            className={styles.post_input}\n            type=\"text\"\n            placeholder=\"add a comment\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <button\n            disabled={!text.length}\n            className={styles.post_button}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}